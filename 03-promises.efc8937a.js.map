{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACcC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACfD,SAASC,cAAc,yBAI9C,SAASC,EAAcC,EAAUC,GACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,EAAUS,MAAAR,IAGpBM,EAAO,C,SAAEP,EAAUS,MAAAR,GAAQ,GAE5BA,EAAM,G,CAbNJ,SAASC,cAAc,SAwC/BY,iBAAiB,UAvBtB,SAAqBC,GACnBA,EAAEC,iBAEF,MAAQC,UAAUC,OAAEA,EAAQL,MAAAM,EAAKC,KAAEA,IAAWL,EAAEM,cAChDC,QAAQC,IAAIR,EAAEM,cAAcD,KAAKI,OAElC,IAAIC,EAAgBV,EAAEM,cAAcH,OAAOM,MACtCE,EAAaC,OAAOZ,EAAEM,cAAcR,MAAMW,OAC1CI,EAAYD,OAAOZ,EAAEM,cAAcD,KAAKI,OAEtC,IAAK,IAAIK,EAAW,EAAGA,GAAYJ,EAAeI,IAChD1B,EAAc0B,EAAUH,GACvBI,MAAK,EAAC1B,SAAEA,EAAUS,MAAAkB,MACjBC,EAAAjC,GAASkC,OAAOC,QAAQ,qBAAqB9B,QAAe2B,MAAU,IAEvEI,OAAM,EAAC/B,SAAEA,EAAUS,MAAAuB,MAClBJ,EAAAjC,GAASkC,OAAOI,QAAQ,oBAAoBjC,QAAegC,MAAU,IAGvEV,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst promisesButton = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector(\".form\");\n\n\nfunction createPromise(position, delay) {\n        const shouldResolve = Math.random() > 0.3;\n        return new Promise((resolve, reject) => {\n          setTimeout(() => { \n            if (shouldResolve) {\n              resolve({ position, delay })\n            }\n            else {\n              reject({ position, delay });\n            }\n          }, delay)\n        })      \n};\n     \nfunction showPromise(e) {\n  e.preventDefault();\n  \n  const { elements: { amount, delay, step } } = e.currentTarget;\n  console.log(e.currentTarget.step.value);\n  \n let currentAmount = e.currentTarget.amount.value;\n  let startDelay = Number(e.currentTarget.delay.value);\n  let delayStep = Number(e.currentTarget.step.value);\n         \n        for (let position = 1; position <= currentAmount; position++) {\n          createPromise(position, startDelay)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n          });\n          \n          startDelay += delayStep;\n        }\n}\n\nform.addEventListener(\"submit\", showPromise);\n\n\n"],"names":["$7Y9D8","parcelRequire","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","elements","amount","delay2","step","currentTarget","console","log","value","currentAmount","startDelay","Number","delayStep","position1","then","delay3","$parcel$interopDefault","Notify","success","catch","delay4","failure"],"version":3,"file":"03-promises.efc8937a.js.map"}