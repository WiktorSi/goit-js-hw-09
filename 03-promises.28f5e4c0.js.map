{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACcC,SAASC,cAAc,uBACxBD,SAASC,cAAc,sBACrBD,SAASC,cAAc,wBACfD,SAASC,cAAc,yBAI9C,SAASC,EAAcC,EAAUC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUS,MAAAR,IAGpBM,EAAO,CAAEP,WAAUS,MAAAR,G,GAEpBA,E,IAbAJ,SAASC,cAAc,SAuC/BY,iBAAiB,UAtBtB,SAAqBC,GACnBA,EAAEC,iBAQI,IANN,IAA6DC,EAAfF,EAAEG,cAAxCC,SAELC,GAFuBH,EAANI,OAAaJ,EAALJ,MAAWI,EAAJK,KAEhBP,EAAEG,cAAcG,OAAOE,OACtCC,EAAaC,OAAOV,EAAEG,cAAcL,MAAMU,OAC1CG,EAAYD,OAAOV,EAAEG,cAAcI,KAAKC,OAE7BI,EAAW,EAAGA,GAAYP,EAAeO,IAChDxB,EAAcwB,EAAUH,GACvBI,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAU0B,EAAKD,EAALhB,MACjBkB,EAAAhC,GAASiC,OAAOC,QAAQ,qBAAoCC,OAAf9B,EAAS,QAAY8B,OAANJ,EAAM,M,IAEnEK,OAAM,SAAAN,G,IAAGzB,EAAQyB,EAARzB,SAAUgC,EAAKP,EAALhB,MAClBkB,EAAAhC,GAASiC,OAAOK,QAAQ,oBAAmCH,OAAf9B,EAAS,QAAY8B,OAANE,EAAM,M,IAGnEZ,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst promisesButton = document.querySelector('button[type=\"submit\"]');\nconst form = document.querySelector(\".form\");\n\n\nfunction createPromise(position, delay) {\n        const shouldResolve = Math.random() > 0.3;\n        return new Promise((resolve, reject) => {\n          setTimeout(() => { \n            if (shouldResolve) {\n              resolve({ position, delay })\n            }\n            else {\n              reject({ position, delay });\n            }\n          }, delay)\n        })      \n};\n     \nfunction showPromise(e) {\n  e.preventDefault();\n  \n  const { elements: { amount, delay, step } } = e.currentTarget;\n    \n let currentAmount = e.currentTarget.amount.value;\n  let startDelay = Number(e.currentTarget.delay.value);\n  let delayStep = Number(e.currentTarget.step.value);\n         \n        for (let position = 1; position <= currentAmount; position++) {\n          createPromise(position, startDelay)\n          .then(({ position, delay }) => {\n            Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n          })\n          .catch(({ position, delay }) => {\n            Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n          });\n          \n          startDelay += delayStep;\n        }\n}\n\nform.addEventListener(\"submit\", showPromise);\n\n\n"],"names":["$6JpON","parcelRequire","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","delay","addEventListener","e","preventDefault","_elements","currentTarget","elements","currentAmount","amount","step","value","startDelay","Number","delayStep","position1","then","param","delay3","$parcel$interopDefault","Notify","success","concat","catch","delay4","failure"],"version":3,"file":"03-promises.28f5e4c0.js.map"}